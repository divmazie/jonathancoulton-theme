{% macro pipeline_button(stage, copy, enable) %}
    <button name="pipeline_stage"
            value="{{ stage }}"
            {% if not enable %}
                disabled="disabled"
            {% endif %}
    >
        {{ copy }}
    </button>
{% endmacro %}

{% import _self as m %}


<html>
<head>
    <style>
        body {

            padding: 30px;
            background-color: lightgoldenrodyellow;
        }

        pre {
            background-color: lightsalmon;
            font-size: 130%;
            padding: 11px;
        }

        #pipeline ol {
            font-size: 120%;
        }

        li p {
            font-size: 80%;
            margin-top: 3px;
            margin-bottom: 7px;
        }

        li button {
            margin-bottom: 15px;
        }
    </style>
</head>

<body>
<form id="pipeline">

    {% if status %}
        <pre>{{ status }}</pre>
        {{ m.pipeline_button('status_x', 'Dismiss This Update', true) }}
    {% endif %}

    <h1>Pipeline Status</h1>
    <ol>
        <li>Song Encodes ({{ pending_encodes|length }} pending of {{ all_encodes|length }})

            <p>This is the first step in the process. Songs can only be pending once
                they and their parent albums are filled out.</p>

            <p> Once songs are submitted to be encoded they will start coming in. You don't need to resubmit them a
                bunch of times. You can refresh this page to check status.</p>

            {{ m.pipeline_button('encodes', "Submit Remaining Encodes for Processing", can_encode ) }}
        </li>
        <li>Album Zips ({{ pending_zips|length }} pending of {{ all_zips|length }})
            <p>Once all the songs are encoded we can zip up the albums.</p>

            {{ m.pipeline_button('zips', "Zip Up Albums", can_zip ) }}
        </li>
        <li>S3 Uploads ({{ uploaded_assets|length }} uploaded, {{ un_uploaded_assets|length }} ready to upload out
            of {{ total_asset_count }})
            <p>Once all tracks and albums are created, they need to be uploaded to s3</p>

            {{ m.pipeline_button('s3', "Upload all the stuff we got", can_upload ) }}

        </li>
        <li>Shopify Product Sync
            <p>Once everything is on s3, then we make sure our records with our store are all good</p>
        </li>
        <li>Shopify Product Resync
            <p>Once everything is on s3, then we make sure our records with our store are all good</p>
        </li>
        <li>Garbage Collection
            <p>If your store all is nice and updated, why leave files from a previous iteration around?
                They're big and unseemly and useless. Wait til everything is updated to delete them, though.
                Till then, parts of the site may still use them.</p>

            {{ m.pipeline_button('garbage', "Take Out The Trash Baby!", garbage_attachments ) }}

        </li>
    </ol>
</form>
<p></p>


<h1>Albums ({{ albums|length }} total)</h1>

<p>Albums are displayed, sorted by their sort key (which is in parentheses after the name). If two
    albums sort keys are identical, they may display in a different order in the store. </p>

<p>The number in parentheses is the track number in the backend. The other number is
    simply a result of it being an HTML list.</p>

<p style="margin-left:15px;">
    <strong style="color:green">green</strong> stuff is done <br/>
    <strong style="color:red">red</strong> stuff is pending<br/>
</p>


<ol>
    {% for album in albums if album.isFilledOut %}
        <li>
            <span style="color:{{ album.isFilledOut?'green':'red' }}">{{ album.title }}</span>
            ({{ album.numTracks }} tracks)
            <a href="{{ album.edit_link }}">EDIT</a><br/>

            <div style="font-size: 80%">
                <span>Zip Status:
                    {% for zipconf in album.albumZipConfigs %}
                        <span style="color:{{ zipconf.assetExists?'green':'red' }}">{{ zipconf.configName }}</span>&nbsp;
                    {% endfor %}
                </span><br/>
                <span>S3 Status:
                    {% for zipconf in album.albumZipConfigs %}
                        <span style="color:{{ zipconf.asset.isUploadedToS3?'green':'red' }}">{{ zipconf.configName }}</span>&nbsp;
                    {% endfor %}
                </span>
            </div>
        </li>

        <ol>
            {% for track in album.albumTracks %}

                <li>
                    <span style="color:{{ track.isFilledOut?'green':'red' }}">
                    ({{ track.trackNumber }}) {{ track.trackTitle }}</span>
                    <a href="{{ track.edit_link }}">edit</a>

                    <div style="font-size: 80%">
                        <span>Encode Status:
                            {% for encodeConf in track.getTrackEncodeConfigs %}
                                <span style="color:{{ encodeConf.assetExists?'green':'red' }}">{{ encodeConf.configName }}</span>&nbsp;
                            {% endfor %}
                        </span><br/>
                        <span>S3 Status:
                            {% for encodeConf in track.getTrackEncodeConfigs %}
                                <span style="color:{{ encodeConf.asset.isUploadedToS3?'green':'red' }}">{{ encodeConf.configName }}</span>&nbsp;
                            {% endfor %}
                        </span>

                    </div>

                </li>
            {% endfor %}
        </ol>
    {% endfor %}
</ol>


</body>

</html>